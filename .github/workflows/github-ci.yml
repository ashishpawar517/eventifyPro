name: Generate Changelog and Post Comment

on:
  pull_request_review:
    types: [submitted] # Trigger on submission of a review
  pull_request:
    types: [opened, synchronize]

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Generate Changelog
        id: changelog
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.repo;
            const { head_sha } = context.payload.pull_request;
            const mainSha = await github.rest.repos.getBranch({
              owner,
              repo,
              branch: 'main'
            }).then(res => res.data.commit.sha);
            const lastCommitSha = await github.rest.repos.getCommit({
              owner,
              repo,
              ref: head_sha
            }).then(res => res.data.sha);
            const diff = await github.rest.repos.compareCommits({
              owner,
              repo,
              base: mainSha,
              head: lastCommitSha
            }).then(res => res.data.diff);
            // Logic to generate changelog from diff
            // This is a placeholder for your changelog generation logic
            const changelog = "Generated Changelog"; // Replace with actual changelog generation logic
            return changelog;

      - name: Commit and Push Changelog
        # if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "Add changelog"
          git push

      - name: Post Comment on PR
        # if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo } = context.repo;
            const { head_sha } = context.payload.pull_request;
            const comment = `Changelog added. PR is ready to merge.`;
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
