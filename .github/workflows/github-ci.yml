# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: GH-Repository-CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
   
     
      - name: Generate random number and date
        id: generate_values
        run: |
          echo "TAG_NAME=v1.0.$RANDOM" >> $GITHUB_ENV
          echo "RELEASE_NAME=Release $(date +%Y-%m-%d)" >> $GITHUB_ENV
      
      - name: Fetch PR details
        uses: actions/github-script@v6
        with:
          script: |
            const commitsUrl = data.commits_url;
            const { data: commitsData } = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: commitsUrl
            });
            if (!commitsData.length) {
              throw new Error('No commits found for this pull request.');
            }
            const mergeCommitSha = data.merge_commit_sha;
            const olderCommitSha = commitsData[0].sha; // Assuming the first commit is the oldest
            console.log(`Merge commit SHA: ${mergeCommitSha}`);
            console.log(`Older commit SHA: ${olderCommitSha}`);
            return { mergeCommitSha, olderCommitSha };
            
      - name: Generate changelog
        if: github.ref == 'refs/heads/main'
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          toTag: ${{ steps.fetch_pr_details.outputs.olderCommitSha }}
          fromTag: ${{ steps.fetch_pr_details.outputs.mergeCommitSha }}
          excludeTypes: "other"
          
      - name: Commit CHANGELOG.md
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: 'docs: update CHANGELOG.md (#${{ github.event.pull_request.number }})'
          file_pattern: CHANGELOG.md       
   
      - name: Create Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
      
